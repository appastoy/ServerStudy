using System;
using System.Linq;
using System.Threading.Tasks;

namespace Neti.CodeGenerator
{
	public static class CodeUtility
	{
		public static readonly string MessageGroupIndent = "			";

		public static Task<string> GenerateAsync(this ICodeGenerator self, Type type)
		{
			return Task.Run(() => self.Generate(type));
		}

		public static string BuildMessageGroupCode(string usingCode,
												   string namespaceName,
												   string messageGroupName,
												   string internalClassName,
												   string internalClassCode)
		{
			var code =
$@"{CodeConstants.AutoGeneratedHeader}

{(string.IsNullOrEmpty(usingCode) ? "// No using" : usingCode)}

namespace {namespaceName}
{{
	public static partial class {messageGroupName}
	{{
		public static class {internalClassName}
		{{
			{internalClassCode}
		}}
	}}
}}";

			return code;
		}

		public static string BuildUsingCode(string[] usingNamespaces)
		{
			if (usingNamespaces == null ||
				usingNamespaces.Length == 0)
			{
				return string.Empty;
			}

			var usingCodes = usingNamespaces.Select(usingName => $"using {usingName};");
			var finaleCode = string.Join(Environment.NewLine, usingCodes);

			return finaleCode;
		}
	}
}
